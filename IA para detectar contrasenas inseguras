import tensorflow as tf
from tensorflow.keras import layers
import numpy as np

# Dataset de ejemplos de contraseñas inseguras vs seguras
inseguras = ["123456", "password", "admin"]
seguras = ["G9f$kD#1", "u@78sL#K", "5m!tY@r9"]

# Codificación básica (ejemplo)
def codificar(pwd):
    return [ord(c)/128 for c in pwd.ljust(12)[:12]]

X = np.array([codificar(p) for p in inseguras + seguras])
y = np.array([0]*len(inseguras) + [1]*len(seguras))

# Modelo simple
modelo = tf.keras.Sequential([
    layers.Dense(16, activation='relu', input_shape=(12,)),
    layers.Dense(8, activation='relu'),
    layers.Dense(1, activation='sigmoid')
])

modelo.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
modelo.fit(X, y, epochs=50, verbose=0)

# Predicción de una nueva contraseña
nueva = codificar("abc123")
print("Segura" if modelo.predict(np.array([nueva]))[0][0] > 0.5 else "Insegura")

